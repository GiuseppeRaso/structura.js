import{_ as s,c as a,o as n,a as e}from"./app.ba95e6f7.js";const C=JSON.parse('{"title":"Settings","description":"","frontmatter":{},"headers":[{"level":2,"title":"Enable standard patches","slug":"enable-standard-patches","link":"#enable-standard-patches","children":[]},{"level":2,"title":"Enable auto freeze","slug":"enable-auto-freeze","link":"#enable-auto-freeze","children":[]},{"level":2,"title":"Enable strict copy (for non-enumerable properties)","slug":"enable-strict-copy-for-non-enumerable-properties","link":"#enable-strict-copy-for-non-enumerable-properties","children":[]},{"level":2,"title":"Change more settings at once","slug":"change-more-settings-at-once","link":"#change-more-settings-at-once","children":[]}],"relativePath":"settings.md"}'),t={name:"settings.md"},p=e(`<h1 id="settings" tabindex="-1">Settings <a class="header-anchor" href="#settings" aria-hidden="true">#</a></h1><p>There are very few settings in Structura because almost everything is active by default</p><h2 id="enable-standard-patches" tabindex="-1">Enable standard patches <a class="header-anchor" href="#enable-standard-patches" aria-hidden="true">#</a></h2><p>Patches in Structura use a proprietary format. If you want instead to use standard json patches, you must active the corresponding setting.</p><p>Alternatively you can use the <a href="./helpers.html#convertpatchestostandard">converting helper</a> to convert non-standard patches that were already created to standard json patches.</p><p>Look at the <a href="./patches.html">&#39;patches&#39; page</a> to know more.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">enableStandardPatches</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">structurajs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">enableStandardPatches</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><p>To revert the setting:</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#82AAFF;">enableStandardPatches</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h2 id="enable-auto-freeze" tabindex="-1">Enable auto freeze <a class="header-anchor" href="#enable-auto-freeze" aria-hidden="true">#</a></h2><p>Freezing at runtime is not active by default, and it should be enabled explicitly. However it is probably unnecessary with Strcutura <a href="./freezing.html">because it allows freezing at compile time</a>.</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">enableAutoFreeze</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">structurajs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">enableAutoFreeze</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><p>To revert the setting:</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#82AAFF;">enableAutoFreeze</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h2 id="enable-strict-copy-for-non-enumerable-properties" tabindex="-1">Enable strict copy (for non-enumerable properties) <a class="header-anchor" href="#enable-strict-copy-for-non-enumerable-properties" aria-hidden="true">#</a></h2><p>The default algorithm for creating a shallow copy is fast, but ignores non-enumerable properties. This could be a problem with some libraries like vue and mobx which trap the values. In order to solve this problem, just enable strict copy:</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">enableStrictCopy</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">structurajs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">enableStrictCopy</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><p>To revert the setting:</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#82AAFF;">enableStrictCopy</span><span style="color:#A6ACCD;">(</span><span style="color:#FF9CAC;">false</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div><h2 id="change-more-settings-at-once" tabindex="-1">Change more settings at once <a class="header-anchor" href="#change-more-settings-at-once" aria-hidden="true">#</a></h2><p>If you have to set multiple settings at once, it may be more convenient to directly manipulate the Settings object:</p><div class="language-typescript"><button class="copy"></button><span class="lang">typescript</span><pre><code><span class="line"><span style="color:#89DDFF;">import</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#A6ACCD;">Settings</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">structurajs</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">Object</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">assign</span><span style="color:#A6ACCD;">(Settings</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">autoFreeze</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">standardPatches</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">strictCopy</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span></code></pre></div>`,22),l=[p];function o(r,c,i,y,D,F){return n(),a("div",null,l)}const d=s(t,[["render",o]]);export{C as __pageData,d as default};
